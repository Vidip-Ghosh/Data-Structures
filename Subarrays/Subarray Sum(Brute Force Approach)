#include<iostream>
using namespace std;
int largestSubarraySum(int A[],int n)
{
    int largestSum = 0;
    for(int i=0;i<n;i++)
    {
        for(int j=i;j<n;j++)
        {
            int SubarraySum = 0;
            for(int k=i;k<=j;k++)
            {
                SubarraySum+=A[k];
            }
            largestSum = max(SubarraySum,largestSum);
        }
    }
    return largestSum;
}

int main()
{
    int A[] = {-2,3,4,-1,5,-12,6,1,3};
    int n = sizeof(A)/sizeof(int);
    cout<<largestSubarraySum(A,n);
}#include<iostream>
using namespace std;
int largestSubarraySum(int A[],int n)
{
    int largestSum = 0;
    for(int i=0;i<n;i++)
    {
        for(int j=i;j<n;j++)
        {
            int SubarraySum = 0;
            for(int k=i;k<=j;k++)
            {
                SubarraySum+=A[k];
            }
            largestSum = max(SubarraySum,largestSum);
        }
    }
    return largestSum;
}

int main()
{
    int A[] = {-2,3,4,-1,5,-12,6,1,3};
    int n = sizeof(A)/sizeof(int);
    cout<<largestSubarraySum(A,n);
}
