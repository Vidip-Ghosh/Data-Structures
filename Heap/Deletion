#include<iostream>
using namespace std;

void heapify(int arr[],int n,int i)
{
    int l = 2*i+1;
    int r = 2*i+2;
    int largest = i;
    if(l<n && arr[l]>arr[largest])
    {
        largest = l;
    }
    if(r<n && arr[r]>arr[largest])
    {
        largest = r;
    }
    if(largest!=i)
    {
        swap(arr[i],arr[largest]);
        heapify(arr,n,largest);
    }
}

void deleteRoot(int arr[],int &n)
{
    int lastElement = arr[n-1]; //Initializing last element
    arr[0] = lastElement;   //Initializing root with the last element 
    n = n-1;
    heapify(arr,n,0);
}

void PrintArray(int arr[],int n)
{
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}

int main()
{
    int arr[] = {10,5,1,4,8};
    int n = sizeof(arr)/sizeof(arr[0]);
    deleteRoot(arr,n);
    PrintArray(arr,n);
}
