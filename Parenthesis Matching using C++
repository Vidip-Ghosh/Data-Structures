#include<bits/stdc++.h>
using namespace std;
bool isBalanced(string expression)
{
    stack<char> s;
    char x;
    for(int i=0;i<expression.length();i++)
    {
        if(expression[i]=='(' || expression[i]=='[' || expression[i]=='{')
        {
            s.push(expression[i]);
        }
        if(s.empty())
        {
            return false;
        }
        
        switch (expression[i])
        {
            case ')':
            x = s.top();
            s.pop();
            if(expression[i]=='{' || expression[i]=='[')
            {
                return false;
            }
            break;
            
            case '}':
            x = s.top();
            s.pop();
            if(expression[i]=='(' || expression[i]=='[')
            {
                return false;
            }
            break;
            
            case '[':
            x = s.top();
            s.pop();
            if(expression[i]=='{' || expression[i]=='(')
            {
                return false;
            }
            break;
        }
    }
    return (s.empty());
}

int main()
{
    string expr = "((a+b)*(c-d))";
    if(isBalanced(expr))
    {
        cout<<"Parenthesis are balanced";
    }
    else
    {
        cout<<"Not balanced";
    }
}
