#include<iostream>
#include<algorithm>
using namespace std;

bool compare(int a,int b)
{
    return a>b;
}

void bubble_sort_rec(int a[],int n)
{
    if(n==1)    /*Base Case-> If only one element is present, Array is sorted*/
    {
        return;
    }
    for(int j=0;j<n-1;j++)
    {
        if(a[j]>a[j+1])
        {
            swap(a[j],a[j+1]);
        }
    }
    bubble_sort_rec(a,n-1);
}

void bubble_sort_rec_2(int a[],int n,int j)
{
    if(n==1 || n==0)    /*Base Case-> If only one element is present, Array is sorted*/
    {
        return;
    }
    if(j==n-1)
    {
        bubble_sort_rec_2(a,n-1,0); /*reduce the problem size and reset j to 0*/
        return;
    }
    if(a[j]>a[j+1])
    {
        swap(a[j],a[j+1]);
    }
    bubble_sort_rec_2(a,n,j+1);
}

int main()
{
    int a[] = {1,5,2,7,3,4};
    int a2[]= {-2,3,4,-1,5,-12,6,1,3};
    int size = sizeof(a)/sizeof(a[0]);
    bubble_sort_rec(a,size);
    for(int i=0;i<size;i++)
    {
        cout<<a[i]<<" ";
    }
    cout<<endl;
    
    bubble_sort_rec_2(a2,size,0);
    for(int i=0;i<size;i++)
    {
        cout<<a2[i]<<" ";
    }
}
