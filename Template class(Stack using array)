#include<iostream>
using namespace std;
template<class T>
class Stack 
{
private:
    T *stk;
    int top;
    int size;
public:
    Stack(int sz)
    {
        size = sz;
        top = -1;
        stk = new T[size];
    }
    void push(T x);
    T pop();
    void display();
};

template<class T>
void Stack<T>::push(T x)
{
    if(top==size-1)
    {
        printf("Stack is full\n");
    }
    else
    {
        top++;
        stk[top] = x;
    }
}

template<class T>
T Stack<T>::pop()
{
    T x=0;
    if(top==-1)
    {
        printf("Stack is empty\n");
    }
    else
    {
        x = stk[top];
        top--;
    }
    return x;
}

template<class T>
void Stack<T>::display()
{
    int i;
    for(i=top;i>=0;i--)
    {
        printf("%.1f ",stk[i]);
    }
    printf("\n");
}

int main()
{
    Stack <float> s(10);
    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);
    s.display();
    s.pop();
    s.pop();
    s.display();
}
